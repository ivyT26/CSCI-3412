List read from file.
[[4], [1, 1, 0], [1, 2, -1], [1, 3, 6], [1, 4, -1], [2, 1, -1], [2, 2, 0], [2, 3, 3], [2, 4, 3], [3, 1, 6], [3, 2, 3], [3, 3, 0], [3, 4, 4], [4, 1, -1], [4, 2, 3], [4, 3, 4], [4, 4, 0]]
Sorted array of edges:
[[1, 2, -1], [1, 4, -1], [1, 1, 0], [1, 3, 6], [2, 1, -1], [2, 2, 0], [2, 3, 3], [2, 4, 3], [3, 3, 0], [3, 2, 3], [3, 4, 4], [3, 1, 6], [4, 1, -1], [4, 4, 0], [4, 2, 3], [4, 3, 4]]
Visited nodes in order.
[1, 3, 2, 4]
Read each nested list in big list as follows: [source node, destination node, weight].
Total length of path starting at first node in list to all other nodes.
[[1, 2, 9], [1, 4, 10], [1, 1, 0], [1, 3, 6]]
All relaxed edges of the graph.
[[1, 3, 6], [3, 2, 3], [2, 4, 3], [3, 4, 4]]